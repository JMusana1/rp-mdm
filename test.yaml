---
# Source: redpoint-mdm/templates/svs-acc-auth.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth
---
# Source: redpoint-mdm/templates/svs-acc-core.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core
---
# Source: redpoint-mdm/templates/svs-acc-perm.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm
---
# Source: redpoint-mdm/templates/svs-acc-ui.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui
---
# Source: redpoint-mdm/templates/svs-acc-user.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user
---
# Source: redpoint-mdm/templates/cfgmap-auth.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-auth-properties
  namespace: redpoint-mdm
data:
  mdm_authentication_service.properties: |
    authentication.active_dir.url=ldap://example.com
    authentication.active_dir.domain=DC=example,DC=com
    authentication.host=localhost
    authentication.port=9901
    user.host=rp-mdm-user
    user.port=443
    permission.host=rp-mdm-perm
    permission.port=443
    trace_messages=false
---
# Source: redpoint-mdm/templates/cfgmap-core.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-core-properties
  namespace: redpoint-mdm
data:
  redpointmdm.properties: |
    rpmdm.service.host=0.0.0.0
    rpmdm.service.port=9902
    rpmdm.authentication.url=http://rp-mdm-auth:443/mdm
    rpmdm.usergroup.url=http://rp-mdm-user:443/mdm
    rpmdm.permission.url=http://rp-mdm-perm:443/mdm
    rpmdm.service.logging=true
---
# Source: redpoint-mdm/templates/cfgmap-perm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-perm-properties
  namespace: redpoint-mdm
data:
  mdm_permission_service.properties: |
    permission.host=localhost
    permission.port=9908
    user.host=rp-mdm-user
    user.port=443
    authentication.host=rp-mdm-auth
    authentication.port=443
    trace_messages=false
---
# Source: redpoint-mdm/templates/cfgmap-ui.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-ui-properties
  namespace: redpoint-mdm
data:
  mdm_web_service.properties: |
    mdm.host=0.0.0.0
    mdm.port=9090
    authentication.host=rp-mdm-auth
    authentication.port=443
    user.host=rp-mdm-user
    user.port=443
    permission.host=rp-mdm-perm
    permission.port=443
    core.port=443
    core.host=rp-mdm-core
    trace_messages=true
---
# Source: redpoint-mdm/templates/cfgmap-user.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpmdm-user-properties
  namespace: redpoint-mdm
data:
  mdm_user_service.properties: |
    user.host=localhost
    user.port=9903
    permission.host=rp-mdm-perm
    permission.port=443
    authentication.host=rp-mdm-auth
    authentication.port=443
    trace_messages=false
---
# Source: redpoint-mdm/templates/service-auth.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth 
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9901
      protocol: TCP
      name: rp-mdm-auth
  selector:
    app: rp-mdm-auth
---
# Source: redpoint-mdm/templates/service-core.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core 
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9902
      protocol: TCP
      name: rp-mdm-core
  selector:
    app: rp-mdm-core
---
# Source: redpoint-mdm/templates/service-perm.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm 
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9908
      protocol: TCP
      name: rp-mdm-perm
  selector:
    app: rp-mdm-perm
---
# Source: redpoint-mdm/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui 
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9090
      protocol: TCP
      name: rp-mdm-ui
  selector:
    app: rp-mdm-ui
---
# Source: redpoint-mdm/templates/service-user.yaml
apiVersion: v1
kind: Service
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user 
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9903
      protocol: TCP
      name: rp-mdm-user
  selector:
    app: rp-mdm-user
---
# Source: redpoint-mdm/templates/deploy-auth.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-auth
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-auth
    aadpodidbinding: 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-auth
  template:
    metadata:
      labels:
        app: rp-mdm-auth
        aadpodidbinding: 
      annotations:
        container.apparmor.security.beta.kubernetes.io/rp-mdm-auth: runtime/default
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-auth
      securityContext:
            fsGroup: 101
            runAsGroup: 101
            runAsUser: 101
            supplementalGroups:
            - 200
      containers:
        - name: rp-mdm-auth
          image: "redpointglobal/rp-mdm-authentication:v1.4.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9901
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 0.5Gi
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core          
          volumeMounts:
            - name: rpmdm-auth-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
      nodeSelector:
        nodepool: user
      volumes:
        - name: rpmdm-auth-properties
          configMap:
            name: rpmdm-auth-properties
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true 
            volumeAttributes:
              secretProviderClass: secrets-store
---
# Source: redpoint-mdm/templates/deploy-core.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-core
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-core
    aadpodidbinding: 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-core
  template:
    metadata:
      labels:
        app: rp-mdm-core
        aadpodidbinding: 
      annotations:
        container.apparmor.security.beta.kubernetes.io/rp-mdm-core: runtime/default
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-core
      securityContext:
            fsGroup: 101
            runAsGroup: 101
            runAsUser: 101
            supplementalGroups:
            - 200
      containers:
        - name: rp-mdm-core         
          image:  "redpointglobal/rp-mdm-core:v1.4.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9902
          resources:
            limits:
              cpu: 3000m
              memory: 12Gi
            requests:
              cpu: 2000m
              memory: 8Gi
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          volumeMounts:
            - name: rpmdm-core-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
      nodeSelector:
        nodepool: user
      volumes:
        - name: rpmdm-core-properties
          configMap:
            name: rpmdm-core-properties
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true 
            volumeAttributes:
              secretProviderClass: secrets-store
---
# Source: redpoint-mdm/templates/deploy-perm.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-perm
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-perm
    aadpodidbinding: 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-perm
  template:
    metadata:
      labels:
        app: rp-mdm-perm
        aadpodidbinding: 
      annotations:
        container.apparmor.security.beta.kubernetes.io/rp-mdm-perm: runtime/default
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-perm
      securityContext:
            fsGroup: 101
            runAsGroup: 101
            runAsUser: 101
            supplementalGroups:
            - 200
      containers:
        - name: rp-mdm-perm
          image: "redpointglobal/rp-mdm-permission:v1.4.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9908
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 0.5Gi
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core
          volumeMounts:
            - name: rpmdm-perm-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
      nodeSelector:
        nodepool: user
      volumes:
        - name: rpmdm-perm-properties
          configMap:
            name: rpmdm-perm-properties
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true 
            volumeAttributes:
              secretProviderClass: secrets-store
---
# Source: redpoint-mdm/templates/deploy-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-ui
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-ui
    aadpodidbinding: 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-ui
  template:
    metadata:
      labels:
        app: rp-mdm-ui
        aadpodidbinding: 
      annotations:
        container.apparmor.security.beta.kubernetes.io/rp-mdm-ui: runtime/default
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-ui
      containers:
        - name: rp-mdm-ui         
          image:  "redpointglobal/rp-mdm-ui:v1.4.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 0.5Gi
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          volumeMounts:
            - name: rpmdm-ui-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
      nodeSelector:
        nodepool: user     
      volumes:
        - name: rpmdm-ui-properties
          configMap:
            name: rpmdm-ui-properties
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true 
            volumeAttributes:
              secretProviderClass: secrets-store
---
# Source: redpoint-mdm/templates/deploy-user.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-mdm-user
  namespace: redpoint-mdm
  labels:
    app: rp-mdm-user
    aadpodidbinding: 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rp-mdm-user
  template:
    metadata:
      labels:
        app: rp-mdm-user
        aadpodidbinding: 
      annotations:
        container.apparmor.security.beta.kubernetes.io/rp-mdm-user: runtime/default
    spec:
      imagePullSecrets:
        - name: docker-io
      serviceAccountName: rp-mdm-user
      securityContext:
            fsGroup: 101
            runAsGroup: 101
            runAsUser: 101
            supplementalGroups:
            - 200
      containers:
        - name: rp-mdm-user
          image: "redpointglobal/rp-mdm-user:v1.4.1-RELEASE"
          imagePullPolicy: Always
          ports:
            - containerPort: 9903
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 0.5Gi
          env:
          - name: MDM_MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mongodb-conn-string
                key: MONGO_CONNECTION_STRING
          - name: JAVA_API_SERVICE
            value: rp-mdm-core
          volumeMounts:
            - name: rpmdm-user-properties
              mountPath: /usr/local/share/redpointmdm/
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
      nodeSelector:
        nodepool: user
      volumes:
        - name: rpmdm-user-properties
          configMap:
            name: rpmdm-user-properties
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true 
            volumeAttributes:
              secretProviderClass: secrets-store
---
# Source: redpoint-mdm/templates/ingress-auth.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mdm-auth-ingress
  namespace: redpoint-mdm
  annotations:
    nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
      - "rp-mdm-auth.example.com"
    secretName: mdm-tls
  ingressClassName: nginx
  rules:
  - host: "rp-mdm-auth.example.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rp-mdm-auth
            port:
              number: 443
---
# Source: redpoint-mdm/templates/ingress-core.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mdm-core-ingress
  namespace: redpoint-mdm
  annotations:
    nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
      - "rp-mdm-core.example.com"
    secretName: mdm-tls
  ingressClassName: nginx
  rules:
  - host: "rp-mdm-core.example.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rp-mdm-core
            port:
              number: 443
---
# Source: redpoint-mdm/templates/ingress-ui.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mdm-ui-ingress
  namespace: redpoint-mdm
  annotations:
    nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
      - "rp-mdm-ui.example.com"
    secretName: mdm-tls
  ingressClassName: nginx
  rules:
  - host: "rp-mdm-ui.example.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rp-mdm-ui
            port:
              number: 443
